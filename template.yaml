AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ses-forwarder

  Sample SAM Template for ses-forwarder

Parameters:
  Domain:
    Type: String
    Default: mail.example.com
  SourceUser:
    Type: String
    Default: ''
  Forwarder:
    Type: String
    Default: ''
  ForwardingAddress:
    Type: String
    Default: recept_to@mail.example.com

Conditions:
  IsNotSourceUser:
    !Equals [!Ref SourceUser, '']
  IsNotForwarder:
    !Equals [!Ref Forwarder, '']

Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        MAIL_FROM: !If [ IsNotForwarder, !Sub "ses@${Domain}", !Ref Forwarder ]
        RCPT_TO: !Ref ForwardingAddress

Resources:
  ####### #     # #     #  #####  ####### ### ####### #     #
  #       #     # ##    # #     #    #     #  #     # ##    #
  #       #     # # #   # #          #     #  #     # # #   #
  #####   #     # #  #  # #          #     #  #     # #  #  #
  #       #     # #   # # #          #     #  #     # #   # #
  #       #     # #    ## #     #    #     #  #     # #    ##
  #        #####  #     #  #####     #    ### ####### #     #
  ForwarderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: forwarder
      Handler: app.lambda_handler
      Runtime: python2.7
      Policies:
      - AWSLambdaBasicExecutionRole
      - Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - ses:SendRawEmail
          Resource: "*"
      Events:
        ReceivedEmail:
          Type: S3
          Properties:
            Bucket: !Ref Bucket
            Events: "s3:ObjectCreated:*"

   #####   ##### 
  #     # #     #
  #             #
   #####   ##### 
        #       #
  #     # #     #
   #####   ##### 
  Bucket:
    Type: AWS::S3::Bucket
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action: s3:PutObject
          Effect: Allow
          Resource: !Sub "arn:aws:s3:::${Bucket}/*"
          Principal:
            Service: ses.amazonaws.com
          Condition:
            StringEquals:
              aws:Referer: !Ref AWS::AccountId

   #####  #######  ##### 
  #     # #       #     #
  #       #       #      
   #####  #####    ##### 
        # #             #
  #     # #       #     #
   #####  #######  ##### 
  ReceiptRuleSet:
    Type: AWS::SES::ReceiptRuleSet
  ReceiptRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref ReceiptRuleSet
      Rule:
        Name: !If [ IsNotSourceUser, !Ref Domain, !Sub "${SourceUser}.${Domain}" ]
        Enabled: true
        ScanEnabled: true
        Recipients:
        - !If [ IsNotSourceUser, !Ref Domain, !Sub "${SourceUser}@${Domain}" ]
        Actions:
        - S3Action:
            BucketName: !Ref Bucket
            ObjectKeyPrefix: ses

Outputs:
  S3Bucket:
    Value: !Ref Bucket
  RuleSet:
    Value: !Ref ReceiptRuleSet
